/*
 *  This file is part of OpenStaticAnalyzer.
 *
 *  Copyright (c) 2004-2018 Department of Software Engineering - University of Szeged
 *
 *  Licensed under Version 1.2 of the EUPL (the "Licence");
 *
 *  You may not use this work except in compliance with the Licence.
 *
 *  You may obtain a copy of the Licence in the LICENSE file or at:
 *
 *  https://joinup.ec.europa.eu/software/page/eupl
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the Licence is distributed on an "AS IS" basis,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the Licence for the specific language governing permissions and
 *  limitations under the Licence.
 */

package columbus.java.asg.enums;

public enum NodeKind {

	ndkBase,
	ndkBlockComment,
	ndkComment,
	ndkCommentable,
	ndkJavadocComment,
	ndkLineComment,
	ndkNamed,
	ndkNonJavadocComment,
	ndkPositioned,
	ndkPositionedWithoutComment,
	ndkAnnotatedTypeExpression,
	ndkAnnotation,
	ndkArrayAccess,
	ndkArrayTypeExpression,
	ndkAssignment,
	ndkBinary,
	ndkBooleanLiteral,
	ndkCharacterLiteral,
	ndkClassLiteral,
	ndkConditional,
	ndkDoubleLiteral,
	ndkErroneous,
	ndkErroneousTypeExpression,
	ndkExpression,
	ndkExternalTypeExpression,
	ndkFieldAccess,
	ndkFloatLiteral,
	ndkFunctionalExpression,
	ndkIdentifier,
	ndkInfixExpression,
	ndkInstanceOf,
	ndkIntegerLiteral,
	ndkLambda,
	ndkLiteral,
	ndkLongLiteral,
	ndkMarkerAnnotation,
	ndkMemberReference,
	ndkMethodInvocation,
	ndkNewArray,
	ndkNewClass,
	ndkNormalAnnotation,
	ndkNullLiteral,
	ndkNumberLiteral,
	ndkParenthesizedExpression,
	ndkPolyExpression,
	ndkPostfixExpression,
	ndkPrefixExpression,
	ndkPrimitiveTypeExpression,
	ndkQualifiedTypeExpression,
	ndkSimpleTypeExpression,
	ndkSingleElementAnnotation,
	ndkStringLiteral,
	ndkSuper,
	ndkThis,
	ndkTypeApplyExpression,
	ndkTypeCast,
	ndkTypeExpression,
	ndkTypeIntersectionExpression,
	ndkTypeUnionExpression,
	ndkUnary,
	ndkWildcardExpression,
	ndkExports,
	ndkModuleDirective,
	ndkOpens,
	ndkProvides,
	ndkRequires,
	ndkUses,
	ndkAssert,
	ndkBasicFor,
	ndkBlock,
	ndkBreak,
	ndkCase,
	ndkContinue,
	ndkDefault,
	ndkDo,
	ndkEmpty,
	ndkEnhancedFor,
	ndkExpressionStatement,
	ndkFor,
	ndkHandler,
	ndkIf,
	ndkIteration,
	ndkJump,
	ndkLabeledStatement,
	ndkReturn,
	ndkSelection,
	ndkStatement,
	ndkSwitch,
	ndkSwitchLabel,
	ndkSynchronized,
	ndkThrow,
	ndkTry,
	ndkWhile,
	ndkAnnotatedElement,
	ndkAnnotationType,
	ndkAnnotationTypeElement,
	ndkAnonymousClass,
	ndkClass,
	ndkClassDeclaration,
	ndkClassGeneric,
	ndkCompilationUnit,
	ndkDeclaration,
	ndkEnum,
	ndkEnumConstant,
	ndkGenericDeclaration,
	ndkImport,
	ndkInitializerBlock,
	ndkInstanceInitializerBlock,
	ndkInterface,
	ndkInterfaceDeclaration,
	ndkInterfaceGeneric,
	ndkMember,
	ndkMethod,
	ndkMethodDeclaration,
	ndkMethodGeneric,
	ndkModule,
	ndkModuleDeclaration,
	ndkNamedDeclaration,
	ndkNormalMethod,
	ndkPackage,
	ndkPackageDeclaration,
	ndkParameter,
	ndkScope,
	ndkStaticInitializerBlock,
	ndkTypeDeclaration,
	ndkTypeParameter,
	ndkVariable,
	ndkVariableDeclaration,
	ndkArrayType,
	ndkBooleanType,
	ndkBoundedWildcardType,
	ndkByteType,
	ndkCharType,
	ndkClassType,
	ndkDoubleType,
	ndkErrorType,
	ndkFloatType,
	ndkIntType,
	ndkIntersectionType,
	ndkLongType,
	ndkLowerBoundedWildcardType,
	ndkMethodType,
	ndkModuleType,
	ndkNoType,
	ndkNullType,
	ndkPackageType,
	ndkParameterizedType,
	ndkPrimitiveType,
	ndkScopedType,
	ndkShortType,
	ndkType,
	ndkTypeVariable,
	ndkUnboundedWildcardType,
	ndkUnionType,
	ndkUpperBoundedWildcardType,
	ndkVoidType,
	ndkWildcardType;

}
