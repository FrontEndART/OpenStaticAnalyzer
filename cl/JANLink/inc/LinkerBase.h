/*
 *  This file is part of OpenStaticAnalyzer.
 *
 *  Copyright (c) 2004-2017 Department of Software Engineering - University of Szeged
 *
 *  Licensed under Version 1.2 of the EUPL (the "Licence");
 *
 *  You may not use this work except in compliance with the Licence.
 *
 *  You may obtain a copy of the Licence in the LICENSE file or at:
 *
 *  https://joinup.ec.europa.eu/software/page/eupl
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the Licence is distributed on an "AS IS" basis,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the Licence for the specific language governing permissions and
 *  limitations under the Licence.
 */

#ifndef _JAVA_LINKERBASE_H_
#define _JAVA_LINKERBASE_H_

#include <java/inc/java.h>
#include "LinkerHelper.h"


namespace columbus { namespace java { namespace linker {

  class LinkerBase : public LinkerHelper, public columbus::java::asg::Visitor {

    public:

      LinkerBase(UniqueMap& strMap, StrNodeIdMap& pathMap, columbus::java::asg::Factory& fact, columbus::java::asg::Factory& tmpFact);

      virtual ~LinkerBase();

      virtual void finishVisit();

      virtual void visit   (const columbus::java::asg::base::BlockComment& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::base::BlockComment& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::base::JavadocComment& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::base::JavadocComment& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::base::LineComment& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::base::LineComment& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::ArrayAccess& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::ArrayAccess& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::ArrayTypeExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::ArrayTypeExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::Assignment& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::Assignment& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::BooleanLiteral& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::BooleanLiteral& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::CharacterLiteral& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::CharacterLiteral& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::ClassLiteral& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::ClassLiteral& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::Conditional& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::Conditional& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::DoubleLiteral& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::DoubleLiteral& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::Erroneous& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::Erroneous& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::ErroneousTypeExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::ErroneousTypeExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::ExternalTypeExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::ExternalTypeExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::FieldAccess& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::FieldAccess& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::FloatLiteral& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::FloatLiteral& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::Identifier& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::Identifier& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::InfixExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::InfixExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::InstanceOf& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::InstanceOf& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::IntegerLiteral& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::IntegerLiteral& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::LongLiteral& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::LongLiteral& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::MarkerAnnotation& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::MarkerAnnotation& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::MethodInvocation& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::MethodInvocation& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::NewArray& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::NewArray& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::NewClass& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::NewClass& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::NormalAnnotation& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::NormalAnnotation& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::NullLiteral& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::NullLiteral& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::ParenthesizedExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::ParenthesizedExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::PostfixExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::PostfixExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::PrefixExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::PrefixExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::PrimitiveTypeExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::PrimitiveTypeExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::QualifiedTypeExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::QualifiedTypeExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::SimpleTypeExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::SimpleTypeExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::SingleElementAnnotation& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::SingleElementAnnotation& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::StringLiteral& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::StringLiteral& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::Super& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::Super& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::This& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::This& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::TypeApplyExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::TypeApplyExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::TypeCast& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::TypeCast& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::TypeUnionExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::TypeUnionExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::expr::WildcardExpression& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::expr::WildcardExpression& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Assert& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Assert& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::BasicFor& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::BasicFor& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Block& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Block& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Break& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Break& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Case& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Case& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Continue& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Continue& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Default& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Default& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Do& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Do& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Empty& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Empty& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::EnhancedFor& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::EnhancedFor& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::ExpressionStatement& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::ExpressionStatement& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Handler& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Handler& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::If& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::If& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::LabeledStatement& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::LabeledStatement& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Return& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Return& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Switch& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Switch& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Synchronized& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Synchronized& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Throw& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Throw& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::Try& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::Try& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::statm::While& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::statm::While& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::AnnotationType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::AnnotationType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::AnnotationTypeElement& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::AnnotationTypeElement& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::AnonymousClass& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::AnonymousClass& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::Class& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::Class& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::ClassGeneric& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::ClassGeneric& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::CompilationUnit& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::CompilationUnit& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::Enum& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::Enum& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::EnumConstant& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::EnumConstant& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::Import& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::Import& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::InstanceInitializerBlock& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::InstanceInitializerBlock& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::Interface& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::Interface& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::InterfaceGeneric& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::InterfaceGeneric& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::Method& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::Method& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::MethodGeneric& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::MethodGeneric& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::Package& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::Package& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::PackageDeclaration& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::PackageDeclaration& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::Parameter& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::Parameter& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::StaticInitializerBlock& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::StaticInitializerBlock& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::TypeParameter& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::TypeParameter& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::struc::Variable& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::struc::Variable& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::ArrayType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::ArrayType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::BooleanType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::BooleanType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::ByteType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::ByteType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::CharType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::CharType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::ClassType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::ClassType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::DoubleType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::DoubleType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::ErrorType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::ErrorType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::FloatType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::FloatType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::IntType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::IntType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::LongType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::LongType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::LowerBoundedWildcardType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::LowerBoundedWildcardType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::MethodType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::MethodType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::NoType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::NoType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::NullType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::NullType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::PackageType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::PackageType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::ParameterizedType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::ParameterizedType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::ShortType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::ShortType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::TypeVariable& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::TypeVariable& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::UnboundedWildcardType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::UnboundedWildcardType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::UnionType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::UnionType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::UpperBoundedWildcardType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::UpperBoundedWildcardType& node, bool callVirtualBase);
      virtual void visit   (const columbus::java::asg::type::VoidType& node, bool callVirtualBase);
      virtual void visitEnd(const columbus::java::asg::type::VoidType& node, bool callVirtualBase);

      virtual void visitEndAnnotation_HasAnnotationName(const columbus::java::asg::expr::Annotation& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndArrayTypeExpression_HasComponentType(const columbus::java::asg::expr::ArrayTypeExpression& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndBinary_HasLeftOperand(const columbus::java::asg::expr::Binary& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndBinary_HasRightOperand(const columbus::java::asg::expr::Binary& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndClassLiteral_HasComponentType(const columbus::java::asg::expr::ClassLiteral& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndConditional_HasCondition(const columbus::java::asg::expr::Conditional& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndConditional_HasTrueExpression(const columbus::java::asg::expr::Conditional& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndConditional_HasFalseExpression(const columbus::java::asg::expr::Conditional& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndErroneous_HasErrors(const columbus::java::asg::expr::Erroneous& begin, const columbus::java::asg::base::Positioned& end);
      virtual void visitEndErroneousTypeExpression_HasErrors(const columbus::java::asg::expr::ErroneousTypeExpression& begin, const columbus::java::asg::base::Positioned& end);
      virtual void visitEndInstanceOf_HasTypeOperand(const columbus::java::asg::expr::InstanceOf& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndMethodInvocation_HasTypeArguments(const columbus::java::asg::expr::MethodInvocation& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndMethodInvocation_HasArguments(const columbus::java::asg::expr::MethodInvocation& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndNewArray_HasComponentType(const columbus::java::asg::expr::NewArray& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndNewArray_HasDimensions(const columbus::java::asg::expr::NewArray& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndNewArray_HasInitializers(const columbus::java::asg::expr::NewArray& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndNewClass_HasEnclosingExpression(const columbus::java::asg::expr::NewClass& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndNewClass_HasTypeArguments(const columbus::java::asg::expr::NewClass& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndNewClass_HasTypeName(const columbus::java::asg::expr::NewClass& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndNewClass_HasArguments(const columbus::java::asg::expr::NewClass& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndNewClass_HasAnonymousClass(const columbus::java::asg::expr::NewClass& begin, const columbus::java::asg::struc::AnonymousClass& end);
      virtual void visitEndNormalAnnotation_HasArguments(const columbus::java::asg::expr::NormalAnnotation& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndQualifiedTypeExpression_HasQualifierType(const columbus::java::asg::expr::QualifiedTypeExpression& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndQualifiedTypeExpression_HasSimpleType(const columbus::java::asg::expr::QualifiedTypeExpression& begin, const columbus::java::asg::expr::SimpleTypeExpression& end);
      virtual void visitEndSingleElementAnnotation_HasArgument(const columbus::java::asg::expr::SingleElementAnnotation& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndTypeApplyExpression_HasRawType(const columbus::java::asg::expr::TypeApplyExpression& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndTypeApplyExpression_HasTypeArguments(const columbus::java::asg::expr::TypeApplyExpression& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndTypeCast_HasTypeOperand(const columbus::java::asg::expr::TypeCast& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndTypeUnionExpression_HasAlternatives(const columbus::java::asg::expr::TypeUnionExpression& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndUnary_HasOperand(const columbus::java::asg::expr::Unary& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndWildcardExpression_HasBound(const columbus::java::asg::expr::WildcardExpression& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndAssert_HasCondition(const columbus::java::asg::statm::Assert& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndAssert_HasDetail(const columbus::java::asg::statm::Assert& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndBasicFor_HasInitializers(const columbus::java::asg::statm::BasicFor& begin, const columbus::java::asg::statm::Statement& end);
      virtual void visitEndBasicFor_HasCondition(const columbus::java::asg::statm::BasicFor& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndBasicFor_HasUpdates(const columbus::java::asg::statm::BasicFor& begin, const columbus::java::asg::statm::Statement& end);
      virtual void visitEndBlock_HasStatements(const columbus::java::asg::statm::Block& begin, const columbus::java::asg::statm::Statement& end);
      virtual void visitEndCase_HasExpression(const columbus::java::asg::statm::Case& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndDo_HasCondition(const columbus::java::asg::statm::Do& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndEnhancedFor_HasParameter(const columbus::java::asg::statm::EnhancedFor& begin, const columbus::java::asg::struc::Parameter& end);
      virtual void visitEndEnhancedFor_HasExpression(const columbus::java::asg::statm::EnhancedFor& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndExpressionStatement_HasExpression(const columbus::java::asg::statm::ExpressionStatement& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndHandler_HasParameter(const columbus::java::asg::statm::Handler& begin, const columbus::java::asg::struc::Parameter& end);
      virtual void visitEndHandler_HasBlock(const columbus::java::asg::statm::Handler& begin, const columbus::java::asg::statm::Block& end);
      virtual void visitEndIf_HasSubstatement(const columbus::java::asg::statm::If& begin, const columbus::java::asg::statm::Statement& end);
      virtual void visitEndIf_HasFalseSubstatement(const columbus::java::asg::statm::If& begin, const columbus::java::asg::statm::Statement& end);
      virtual void visitEndIteration_HasSubstatement(const columbus::java::asg::statm::Iteration& begin, const columbus::java::asg::statm::Statement& end);
      virtual void visitEndLabeledStatement_HasStatement(const columbus::java::asg::statm::LabeledStatement& begin, const columbus::java::asg::statm::Statement& end);
      virtual void visitEndReturn_HasExpression(const columbus::java::asg::statm::Return& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndSelection_HasCondition(const columbus::java::asg::statm::Selection& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndSwitch_HasCases(const columbus::java::asg::statm::Switch& begin, const columbus::java::asg::statm::SwitchLabel& end);
      virtual void visitEndSwitchLabel_HasStatements(const columbus::java::asg::statm::SwitchLabel& begin, const columbus::java::asg::statm::Statement& end);
      virtual void visitEndSynchronized_HasLock(const columbus::java::asg::statm::Synchronized& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndSynchronized_HasBlock(const columbus::java::asg::statm::Synchronized& begin, const columbus::java::asg::statm::Block& end);
      virtual void visitEndThrow_HasExpression(const columbus::java::asg::statm::Throw& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndTry_HasResources(const columbus::java::asg::statm::Try& begin, const columbus::java::asg::struc::Variable& end);
      virtual void visitEndTry_HasBlock(const columbus::java::asg::statm::Try& begin, const columbus::java::asg::statm::Block& end);
      virtual void visitEndTry_HasHandlers(const columbus::java::asg::statm::Try& begin, const columbus::java::asg::statm::Handler& end);
      virtual void visitEndTry_HasFinallyBlock(const columbus::java::asg::statm::Try& begin, const columbus::java::asg::statm::Block& end);
      virtual void visitEndWhile_HasCondition(const columbus::java::asg::statm::While& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndAnnotatedElement_HasAnnotations(const columbus::java::asg::struc::AnnotatedElement& begin, const columbus::java::asg::expr::Annotation& end);
      virtual void visitEndAnnotationTypeElement_HasDefaultValue(const columbus::java::asg::struc::AnnotationTypeElement& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndCompilationUnit_HasPackageDeclaration(const columbus::java::asg::struc::CompilationUnit& begin, const columbus::java::asg::struc::PackageDeclaration& end);
      virtual void visitEndCompilationUnit_HasImports(const columbus::java::asg::struc::CompilationUnit& begin, const columbus::java::asg::struc::Import& end);
      virtual void visitEndCompilationUnit_HasOthers(const columbus::java::asg::struc::CompilationUnit& begin, const columbus::java::asg::base::Positioned& end);
      virtual void visitEndEnumConstant_HasNewClass(const columbus::java::asg::struc::EnumConstant& begin, const columbus::java::asg::expr::NewClass& end);
      virtual void visitEndGenericDeclaration_HasTypeParameters(const columbus::java::asg::struc::GenericDeclaration& begin, const columbus::java::asg::struc::TypeParameter& end);
      virtual void visitEndImport_HasTarget(const columbus::java::asg::struc::Import& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndInitializerBlock_HasBody(const columbus::java::asg::struc::InitializerBlock& begin, const columbus::java::asg::statm::Block& end);
      virtual void visitEndMethodDeclaration_HasReturnType(const columbus::java::asg::struc::MethodDeclaration& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndNormalMethod_HasParameters(const columbus::java::asg::struc::NormalMethod& begin, const columbus::java::asg::struc::Parameter& end);
      virtual void visitEndNormalMethod_HasBody(const columbus::java::asg::struc::NormalMethod& begin, const columbus::java::asg::statm::Block& end);
      virtual void visitEndNormalMethod_HasThrownExceptions(const columbus::java::asg::struc::NormalMethod& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndPackage_HasCompilationUnits(const columbus::java::asg::struc::Package& begin, const columbus::java::asg::struc::CompilationUnit& end);
      virtual void visitEndPackageDeclaration_HasPackageName(const columbus::java::asg::struc::PackageDeclaration& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndScope_HasMembers(const columbus::java::asg::struc::Scope& begin, const columbus::java::asg::struc::Member& end);
      virtual void visitEndTypeDeclaration_HasSuperClass(const columbus::java::asg::struc::TypeDeclaration& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndTypeDeclaration_HasSuperInterfaces(const columbus::java::asg::struc::TypeDeclaration& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndTypeDeclaration_HasOthers(const columbus::java::asg::struc::TypeDeclaration& begin, const columbus::java::asg::base::Positioned& end);
      virtual void visitEndTypeParameter_HasBounds(const columbus::java::asg::struc::TypeParameter& begin, const columbus::java::asg::expr::TypeExpression& end);
      virtual void visitEndVariable_HasInitialValue(const columbus::java::asg::struc::Variable& begin, const columbus::java::asg::expr::Expression& end);
      virtual void visitEndVariableDeclaration_HasType(const columbus::java::asg::struc::VariableDeclaration& begin, const columbus::java::asg::expr::TypeExpression& end);

    protected:

      virtual void setAttributes(columbus::java::asg::base::Base& to, const columbus::java::asg::base::Base& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::base::BlockComment& to, const columbus::java::asg::base::BlockComment& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::base::Comment& to, const columbus::java::asg::base::Comment& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::base::Commentable& to, const columbus::java::asg::base::Commentable& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::base::JavadocComment& to, const columbus::java::asg::base::JavadocComment& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::base::LineComment& to, const columbus::java::asg::base::LineComment& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::base::Named& to, const columbus::java::asg::base::Named& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::base::NonJavadocComment& to, const columbus::java::asg::base::NonJavadocComment& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::base::Positioned& to, const columbus::java::asg::base::Positioned& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::base::PositionedWithoutComment& to, const columbus::java::asg::base::PositionedWithoutComment& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::Annotation& to, const columbus::java::asg::expr::Annotation& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::ArrayAccess& to, const columbus::java::asg::expr::ArrayAccess& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::ArrayTypeExpression& to, const columbus::java::asg::expr::ArrayTypeExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::Assignment& to, const columbus::java::asg::expr::Assignment& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::Binary& to, const columbus::java::asg::expr::Binary& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::BooleanLiteral& to, const columbus::java::asg::expr::BooleanLiteral& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::CharacterLiteral& to, const columbus::java::asg::expr::CharacterLiteral& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::ClassLiteral& to, const columbus::java::asg::expr::ClassLiteral& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::Conditional& to, const columbus::java::asg::expr::Conditional& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::DoubleLiteral& to, const columbus::java::asg::expr::DoubleLiteral& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::Erroneous& to, const columbus::java::asg::expr::Erroneous& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::ErroneousTypeExpression& to, const columbus::java::asg::expr::ErroneousTypeExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::Expression& to, const columbus::java::asg::expr::Expression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::ExternalTypeExpression& to, const columbus::java::asg::expr::ExternalTypeExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::FieldAccess& to, const columbus::java::asg::expr::FieldAccess& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::FloatLiteral& to, const columbus::java::asg::expr::FloatLiteral& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::Identifier& to, const columbus::java::asg::expr::Identifier& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::InfixExpression& to, const columbus::java::asg::expr::InfixExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::InstanceOf& to, const columbus::java::asg::expr::InstanceOf& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::IntegerLiteral& to, const columbus::java::asg::expr::IntegerLiteral& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::Literal& to, const columbus::java::asg::expr::Literal& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::LongLiteral& to, const columbus::java::asg::expr::LongLiteral& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::MarkerAnnotation& to, const columbus::java::asg::expr::MarkerAnnotation& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::MethodInvocation& to, const columbus::java::asg::expr::MethodInvocation& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::NewArray& to, const columbus::java::asg::expr::NewArray& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::NewClass& to, const columbus::java::asg::expr::NewClass& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::NormalAnnotation& to, const columbus::java::asg::expr::NormalAnnotation& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::NullLiteral& to, const columbus::java::asg::expr::NullLiteral& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::NumberLiteral& to, const columbus::java::asg::expr::NumberLiteral& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::ParenthesizedExpression& to, const columbus::java::asg::expr::ParenthesizedExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::PostfixExpression& to, const columbus::java::asg::expr::PostfixExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::PrefixExpression& to, const columbus::java::asg::expr::PrefixExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::PrimitiveTypeExpression& to, const columbus::java::asg::expr::PrimitiveTypeExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::QualifiedTypeExpression& to, const columbus::java::asg::expr::QualifiedTypeExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::SimpleTypeExpression& to, const columbus::java::asg::expr::SimpleTypeExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::SingleElementAnnotation& to, const columbus::java::asg::expr::SingleElementAnnotation& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::StringLiteral& to, const columbus::java::asg::expr::StringLiteral& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::Super& to, const columbus::java::asg::expr::Super& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::This& to, const columbus::java::asg::expr::This& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::TypeApplyExpression& to, const columbus::java::asg::expr::TypeApplyExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::TypeCast& to, const columbus::java::asg::expr::TypeCast& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::TypeExpression& to, const columbus::java::asg::expr::TypeExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::TypeUnionExpression& to, const columbus::java::asg::expr::TypeUnionExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::Unary& to, const columbus::java::asg::expr::Unary& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::expr::WildcardExpression& to, const columbus::java::asg::expr::WildcardExpression& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Assert& to, const columbus::java::asg::statm::Assert& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::BasicFor& to, const columbus::java::asg::statm::BasicFor& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Block& to, const columbus::java::asg::statm::Block& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Break& to, const columbus::java::asg::statm::Break& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Case& to, const columbus::java::asg::statm::Case& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Continue& to, const columbus::java::asg::statm::Continue& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Default& to, const columbus::java::asg::statm::Default& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Do& to, const columbus::java::asg::statm::Do& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Empty& to, const columbus::java::asg::statm::Empty& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::EnhancedFor& to, const columbus::java::asg::statm::EnhancedFor& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::ExpressionStatement& to, const columbus::java::asg::statm::ExpressionStatement& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::For& to, const columbus::java::asg::statm::For& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Handler& to, const columbus::java::asg::statm::Handler& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::If& to, const columbus::java::asg::statm::If& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Iteration& to, const columbus::java::asg::statm::Iteration& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Jump& to, const columbus::java::asg::statm::Jump& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::LabeledStatement& to, const columbus::java::asg::statm::LabeledStatement& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Return& to, const columbus::java::asg::statm::Return& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Selection& to, const columbus::java::asg::statm::Selection& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Statement& to, const columbus::java::asg::statm::Statement& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Switch& to, const columbus::java::asg::statm::Switch& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::SwitchLabel& to, const columbus::java::asg::statm::SwitchLabel& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Synchronized& to, const columbus::java::asg::statm::Synchronized& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Throw& to, const columbus::java::asg::statm::Throw& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::Try& to, const columbus::java::asg::statm::Try& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::statm::While& to, const columbus::java::asg::statm::While& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::AnnotatedElement& to, const columbus::java::asg::struc::AnnotatedElement& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::AnnotationType& to, const columbus::java::asg::struc::AnnotationType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::AnnotationTypeElement& to, const columbus::java::asg::struc::AnnotationTypeElement& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::AnonymousClass& to, const columbus::java::asg::struc::AnonymousClass& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Class& to, const columbus::java::asg::struc::Class& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::ClassDeclaration& to, const columbus::java::asg::struc::ClassDeclaration& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::ClassGeneric& to, const columbus::java::asg::struc::ClassGeneric& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::CompilationUnit& to, const columbus::java::asg::struc::CompilationUnit& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Declaration& to, const columbus::java::asg::struc::Declaration& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Enum& to, const columbus::java::asg::struc::Enum& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::EnumConstant& to, const columbus::java::asg::struc::EnumConstant& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::GenericDeclaration& to, const columbus::java::asg::struc::GenericDeclaration& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Import& to, const columbus::java::asg::struc::Import& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::InitializerBlock& to, const columbus::java::asg::struc::InitializerBlock& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::InstanceInitializerBlock& to, const columbus::java::asg::struc::InstanceInitializerBlock& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Interface& to, const columbus::java::asg::struc::Interface& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::InterfaceDeclaration& to, const columbus::java::asg::struc::InterfaceDeclaration& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::InterfaceGeneric& to, const columbus::java::asg::struc::InterfaceGeneric& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Member& to, const columbus::java::asg::struc::Member& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Method& to, const columbus::java::asg::struc::Method& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::MethodDeclaration& to, const columbus::java::asg::struc::MethodDeclaration& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::MethodGeneric& to, const columbus::java::asg::struc::MethodGeneric& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::NamedDeclaration& to, const columbus::java::asg::struc::NamedDeclaration& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::NormalMethod& to, const columbus::java::asg::struc::NormalMethod& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Package& to, const columbus::java::asg::struc::Package& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::PackageDeclaration& to, const columbus::java::asg::struc::PackageDeclaration& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Parameter& to, const columbus::java::asg::struc::Parameter& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Scope& to, const columbus::java::asg::struc::Scope& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::StaticInitializerBlock& to, const columbus::java::asg::struc::StaticInitializerBlock& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::TypeDeclaration& to, const columbus::java::asg::struc::TypeDeclaration& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::TypeParameter& to, const columbus::java::asg::struc::TypeParameter& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::Variable& to, const columbus::java::asg::struc::Variable& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::struc::VariableDeclaration& to, const columbus::java::asg::struc::VariableDeclaration& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::ArrayType& to, const columbus::java::asg::type::ArrayType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::BooleanType& to, const columbus::java::asg::type::BooleanType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::BoundedWildcardType& to, const columbus::java::asg::type::BoundedWildcardType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::ByteType& to, const columbus::java::asg::type::ByteType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::CharType& to, const columbus::java::asg::type::CharType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::ClassType& to, const columbus::java::asg::type::ClassType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::DoubleType& to, const columbus::java::asg::type::DoubleType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::ErrorType& to, const columbus::java::asg::type::ErrorType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::FloatType& to, const columbus::java::asg::type::FloatType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::IntType& to, const columbus::java::asg::type::IntType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::LongType& to, const columbus::java::asg::type::LongType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::LowerBoundedWildcardType& to, const columbus::java::asg::type::LowerBoundedWildcardType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::MethodType& to, const columbus::java::asg::type::MethodType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::NoType& to, const columbus::java::asg::type::NoType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::NullType& to, const columbus::java::asg::type::NullType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::PackageType& to, const columbus::java::asg::type::PackageType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::ParameterizedType& to, const columbus::java::asg::type::ParameterizedType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::PrimitiveType& to, const columbus::java::asg::type::PrimitiveType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::ScopedType& to, const columbus::java::asg::type::ScopedType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::ShortType& to, const columbus::java::asg::type::ShortType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::Type& to, const columbus::java::asg::type::Type& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::TypeVariable& to, const columbus::java::asg::type::TypeVariable& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::UnboundedWildcardType& to, const columbus::java::asg::type::UnboundedWildcardType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::UnionType& to, const columbus::java::asg::type::UnionType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::UpperBoundedWildcardType& to, const columbus::java::asg::type::UpperBoundedWildcardType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::VoidType& to, const columbus::java::asg::type::VoidType& from, bool callVirtualBase);
      virtual void setAttributes(columbus::java::asg::type::WildcardType& to, const columbus::java::asg::type::WildcardType& from, bool callVirtualBase);

      virtual void collectEdges(columbus::java::asg::base::Base& newNode, const columbus::java::asg::base::Base& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::base::BlockComment& newNode, const columbus::java::asg::base::BlockComment& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::base::Comment& newNode, const columbus::java::asg::base::Comment& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::base::Commentable& newNode, const columbus::java::asg::base::Commentable& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::base::JavadocComment& newNode, const columbus::java::asg::base::JavadocComment& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::base::LineComment& newNode, const columbus::java::asg::base::LineComment& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::base::Named& newNode, const columbus::java::asg::base::Named& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::base::NonJavadocComment& newNode, const columbus::java::asg::base::NonJavadocComment& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::base::Positioned& newNode, const columbus::java::asg::base::Positioned& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::base::PositionedWithoutComment& newNode, const columbus::java::asg::base::PositionedWithoutComment& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::Annotation& newNode, const columbus::java::asg::expr::Annotation& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::ArrayAccess& newNode, const columbus::java::asg::expr::ArrayAccess& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::ArrayTypeExpression& newNode, const columbus::java::asg::expr::ArrayTypeExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::Assignment& newNode, const columbus::java::asg::expr::Assignment& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::Binary& newNode, const columbus::java::asg::expr::Binary& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::BooleanLiteral& newNode, const columbus::java::asg::expr::BooleanLiteral& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::CharacterLiteral& newNode, const columbus::java::asg::expr::CharacterLiteral& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::ClassLiteral& newNode, const columbus::java::asg::expr::ClassLiteral& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::Conditional& newNode, const columbus::java::asg::expr::Conditional& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::DoubleLiteral& newNode, const columbus::java::asg::expr::DoubleLiteral& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::Erroneous& newNode, const columbus::java::asg::expr::Erroneous& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::ErroneousTypeExpression& newNode, const columbus::java::asg::expr::ErroneousTypeExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::Expression& newNode, const columbus::java::asg::expr::Expression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::ExternalTypeExpression& newNode, const columbus::java::asg::expr::ExternalTypeExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::FieldAccess& newNode, const columbus::java::asg::expr::FieldAccess& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::FloatLiteral& newNode, const columbus::java::asg::expr::FloatLiteral& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::Identifier& newNode, const columbus::java::asg::expr::Identifier& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::InfixExpression& newNode, const columbus::java::asg::expr::InfixExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::InstanceOf& newNode, const columbus::java::asg::expr::InstanceOf& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::IntegerLiteral& newNode, const columbus::java::asg::expr::IntegerLiteral& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::Literal& newNode, const columbus::java::asg::expr::Literal& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::LongLiteral& newNode, const columbus::java::asg::expr::LongLiteral& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::MarkerAnnotation& newNode, const columbus::java::asg::expr::MarkerAnnotation& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::MethodInvocation& newNode, const columbus::java::asg::expr::MethodInvocation& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::NewArray& newNode, const columbus::java::asg::expr::NewArray& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::NewClass& newNode, const columbus::java::asg::expr::NewClass& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::NormalAnnotation& newNode, const columbus::java::asg::expr::NormalAnnotation& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::NullLiteral& newNode, const columbus::java::asg::expr::NullLiteral& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::NumberLiteral& newNode, const columbus::java::asg::expr::NumberLiteral& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::ParenthesizedExpression& newNode, const columbus::java::asg::expr::ParenthesizedExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::PostfixExpression& newNode, const columbus::java::asg::expr::PostfixExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::PrefixExpression& newNode, const columbus::java::asg::expr::PrefixExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::PrimitiveTypeExpression& newNode, const columbus::java::asg::expr::PrimitiveTypeExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::QualifiedTypeExpression& newNode, const columbus::java::asg::expr::QualifiedTypeExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::SimpleTypeExpression& newNode, const columbus::java::asg::expr::SimpleTypeExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::SingleElementAnnotation& newNode, const columbus::java::asg::expr::SingleElementAnnotation& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::StringLiteral& newNode, const columbus::java::asg::expr::StringLiteral& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::Super& newNode, const columbus::java::asg::expr::Super& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::This& newNode, const columbus::java::asg::expr::This& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::TypeApplyExpression& newNode, const columbus::java::asg::expr::TypeApplyExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::TypeCast& newNode, const columbus::java::asg::expr::TypeCast& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::TypeExpression& newNode, const columbus::java::asg::expr::TypeExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::TypeUnionExpression& newNode, const columbus::java::asg::expr::TypeUnionExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::Unary& newNode, const columbus::java::asg::expr::Unary& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::expr::WildcardExpression& newNode, const columbus::java::asg::expr::WildcardExpression& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Assert& newNode, const columbus::java::asg::statm::Assert& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::BasicFor& newNode, const columbus::java::asg::statm::BasicFor& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Block& newNode, const columbus::java::asg::statm::Block& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Break& newNode, const columbus::java::asg::statm::Break& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Case& newNode, const columbus::java::asg::statm::Case& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Continue& newNode, const columbus::java::asg::statm::Continue& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Default& newNode, const columbus::java::asg::statm::Default& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Do& newNode, const columbus::java::asg::statm::Do& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Empty& newNode, const columbus::java::asg::statm::Empty& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::EnhancedFor& newNode, const columbus::java::asg::statm::EnhancedFor& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::ExpressionStatement& newNode, const columbus::java::asg::statm::ExpressionStatement& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::For& newNode, const columbus::java::asg::statm::For& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Handler& newNode, const columbus::java::asg::statm::Handler& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::If& newNode, const columbus::java::asg::statm::If& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Iteration& newNode, const columbus::java::asg::statm::Iteration& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Jump& newNode, const columbus::java::asg::statm::Jump& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::LabeledStatement& newNode, const columbus::java::asg::statm::LabeledStatement& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Return& newNode, const columbus::java::asg::statm::Return& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Selection& newNode, const columbus::java::asg::statm::Selection& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Statement& newNode, const columbus::java::asg::statm::Statement& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Switch& newNode, const columbus::java::asg::statm::Switch& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::SwitchLabel& newNode, const columbus::java::asg::statm::SwitchLabel& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Synchronized& newNode, const columbus::java::asg::statm::Synchronized& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Throw& newNode, const columbus::java::asg::statm::Throw& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::Try& newNode, const columbus::java::asg::statm::Try& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::statm::While& newNode, const columbus::java::asg::statm::While& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::AnnotatedElement& newNode, const columbus::java::asg::struc::AnnotatedElement& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::AnnotationType& newNode, const columbus::java::asg::struc::AnnotationType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::AnnotationTypeElement& newNode, const columbus::java::asg::struc::AnnotationTypeElement& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::AnonymousClass& newNode, const columbus::java::asg::struc::AnonymousClass& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Class& newNode, const columbus::java::asg::struc::Class& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::ClassDeclaration& newNode, const columbus::java::asg::struc::ClassDeclaration& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::ClassGeneric& newNode, const columbus::java::asg::struc::ClassGeneric& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::CompilationUnit& newNode, const columbus::java::asg::struc::CompilationUnit& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Declaration& newNode, const columbus::java::asg::struc::Declaration& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Enum& newNode, const columbus::java::asg::struc::Enum& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::EnumConstant& newNode, const columbus::java::asg::struc::EnumConstant& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::GenericDeclaration& newNode, const columbus::java::asg::struc::GenericDeclaration& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Import& newNode, const columbus::java::asg::struc::Import& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::InitializerBlock& newNode, const columbus::java::asg::struc::InitializerBlock& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::InstanceInitializerBlock& newNode, const columbus::java::asg::struc::InstanceInitializerBlock& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Interface& newNode, const columbus::java::asg::struc::Interface& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::InterfaceDeclaration& newNode, const columbus::java::asg::struc::InterfaceDeclaration& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::InterfaceGeneric& newNode, const columbus::java::asg::struc::InterfaceGeneric& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Member& newNode, const columbus::java::asg::struc::Member& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Method& newNode, const columbus::java::asg::struc::Method& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::MethodDeclaration& newNode, const columbus::java::asg::struc::MethodDeclaration& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::MethodGeneric& newNode, const columbus::java::asg::struc::MethodGeneric& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::NamedDeclaration& newNode, const columbus::java::asg::struc::NamedDeclaration& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::NormalMethod& newNode, const columbus::java::asg::struc::NormalMethod& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Package& newNode, const columbus::java::asg::struc::Package& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::PackageDeclaration& newNode, const columbus::java::asg::struc::PackageDeclaration& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Parameter& newNode, const columbus::java::asg::struc::Parameter& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Scope& newNode, const columbus::java::asg::struc::Scope& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::StaticInitializerBlock& newNode, const columbus::java::asg::struc::StaticInitializerBlock& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::TypeDeclaration& newNode, const columbus::java::asg::struc::TypeDeclaration& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::TypeParameter& newNode, const columbus::java::asg::struc::TypeParameter& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::Variable& newNode, const columbus::java::asg::struc::Variable& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::struc::VariableDeclaration& newNode, const columbus::java::asg::struc::VariableDeclaration& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::ArrayType& newNode, const columbus::java::asg::type::ArrayType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::BooleanType& newNode, const columbus::java::asg::type::BooleanType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::BoundedWildcardType& newNode, const columbus::java::asg::type::BoundedWildcardType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::ByteType& newNode, const columbus::java::asg::type::ByteType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::CharType& newNode, const columbus::java::asg::type::CharType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::ClassType& newNode, const columbus::java::asg::type::ClassType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::DoubleType& newNode, const columbus::java::asg::type::DoubleType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::ErrorType& newNode, const columbus::java::asg::type::ErrorType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::FloatType& newNode, const columbus::java::asg::type::FloatType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::IntType& newNode, const columbus::java::asg::type::IntType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::LongType& newNode, const columbus::java::asg::type::LongType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::LowerBoundedWildcardType& newNode, const columbus::java::asg::type::LowerBoundedWildcardType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::MethodType& newNode, const columbus::java::asg::type::MethodType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::NoType& newNode, const columbus::java::asg::type::NoType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::NullType& newNode, const columbus::java::asg::type::NullType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::PackageType& newNode, const columbus::java::asg::type::PackageType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::ParameterizedType& newNode, const columbus::java::asg::type::ParameterizedType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::PrimitiveType& newNode, const columbus::java::asg::type::PrimitiveType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::ScopedType& newNode, const columbus::java::asg::type::ScopedType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::ShortType& newNode, const columbus::java::asg::type::ShortType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::Type& newNode, const columbus::java::asg::type::Type& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::TypeVariable& newNode, const columbus::java::asg::type::TypeVariable& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::UnboundedWildcardType& newNode, const columbus::java::asg::type::UnboundedWildcardType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::UnionType& newNode, const columbus::java::asg::type::UnionType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::UpperBoundedWildcardType& newNode, const columbus::java::asg::type::UpperBoundedWildcardType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::VoidType& newNode, const columbus::java::asg::type::VoidType& node, std::vector<NodeId>& v, bool callVirtualBase);
      virtual void collectEdges(columbus::java::asg::type::WildcardType& newNode, const columbus::java::asg::type::WildcardType& node, std::vector<NodeId>& v, bool callVirtualBase);

      virtual void setEdges(columbus::java::asg::base::Base& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::base::BlockComment& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::base::Comment& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::base::Commentable& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::base::JavadocComment& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::base::LineComment& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::base::Named& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::base::NonJavadocComment& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::base::Positioned& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::base::PositionedWithoutComment& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::Annotation& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::ArrayAccess& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::ArrayTypeExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::Assignment& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::Binary& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::BooleanLiteral& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::CharacterLiteral& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::ClassLiteral& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::Conditional& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::DoubleLiteral& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::Erroneous& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::ErroneousTypeExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::Expression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::ExternalTypeExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::FieldAccess& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::FloatLiteral& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::Identifier& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::InfixExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::InstanceOf& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::IntegerLiteral& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::Literal& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::LongLiteral& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::MarkerAnnotation& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::MethodInvocation& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::NewArray& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::NewClass& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::NormalAnnotation& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::NullLiteral& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::NumberLiteral& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::ParenthesizedExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::PostfixExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::PrefixExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::PrimitiveTypeExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::QualifiedTypeExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::SimpleTypeExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::SingleElementAnnotation& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::StringLiteral& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::Super& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::This& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::TypeApplyExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::TypeCast& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::TypeExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::TypeUnionExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::Unary& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::expr::WildcardExpression& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Assert& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::BasicFor& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Block& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Break& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Case& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Continue& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Default& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Do& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Empty& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::EnhancedFor& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::ExpressionStatement& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::For& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Handler& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::If& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Iteration& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Jump& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::LabeledStatement& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Return& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Selection& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Statement& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Switch& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::SwitchLabel& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Synchronized& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Throw& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::Try& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::statm::While& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::AnnotatedElement& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::AnnotationType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::AnnotationTypeElement& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::AnonymousClass& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Class& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::ClassDeclaration& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::ClassGeneric& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::CompilationUnit& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Declaration& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Enum& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::EnumConstant& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::GenericDeclaration& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Import& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::InitializerBlock& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::InstanceInitializerBlock& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Interface& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::InterfaceDeclaration& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::InterfaceGeneric& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Member& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Method& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::MethodDeclaration& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::MethodGeneric& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::NamedDeclaration& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::NormalMethod& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Package& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::PackageDeclaration& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Parameter& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Scope& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::StaticInitializerBlock& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::TypeDeclaration& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::TypeParameter& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::Variable& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::struc::VariableDeclaration& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::ArrayType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::BooleanType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::BoundedWildcardType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::ByteType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::CharType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::ClassType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::DoubleType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::ErrorType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::FloatType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::IntType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::LongType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::LowerBoundedWildcardType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::MethodType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::NoType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::NullType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::PackageType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::ParameterizedType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::PrimitiveType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::ScopedType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::ShortType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::Type& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::TypeVariable& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::UnboundedWildcardType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::UnionType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::UpperBoundedWildcardType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::VoidType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);
      virtual void setEdges(columbus::java::asg::type::WildcardType& node, std::vector<NodeId>& v, unsigned int& index, bool callVirtualBase);

      virtual NodeId remap(NodeId oldId);
      NodeId resolve(NodeId oldId);
      virtual NodeId getNewNode(const columbus::java::asg::base::Base& node, bool& update);
      void remapNode(NodeId oldId, NodeId newId);

    protected:

      columbus::java::asg::Factory& fact;
      columbus::java::asg::Factory& tmpFact;
      std::vector<NodeId> tmpMap;
      std::vector<std::vector<NodeId> > toRemap;
      NodeId skip;

  };

}}}

#endif

